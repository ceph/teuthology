#!/bin/bash
set -e
if [ $# -eq 0 ]; then
  install=false
else
  if [ "$1" = "install" ]; then
      install=true
  else
      echo "Invalid command, supported commands are: 'install'"
      exit 1
  fi
fi

case "$(uname -s)" in
Linux)
    if command -v lsb_release > /dev/null; then
        OS=$(lsb_release --id --short)
    else
        . /etc/os-release
        OS=$(echo $NAME | tr -d ' ')
    fi
    case "$OS" in
    Ubuntu|Debian|LinuxMint)
        deps=(qemu-utils python3-dev libssl-dev libev-dev libvirt-dev libffi-dev libyaml-dev pipx)
        has_pkg="dpkg -C"
        install_pkg="sudo apt install -y"
        ;;
    RedHatEnterpriseWorkstation|RedHatEnterpriseServer|RedHatEnterprise|CentOS|CentOSStream|AlmaLinux|RockyLinux|Fedora|FedoraLinux)
        # Use the newest version we find
        if [ -z "$PYTHON" ]; then
          for i in 13 12 11 10; do
            command -v "python3.$i" > /dev/null && PYTHON="python3.$i" && break
          done
        fi
        if [ -z "$PYTHON" ]; then
          # This would be bizarre, but I suppose possible
          PYTHON=${PYTHON:-"python3"}
        fi
        has_pkg="rpm --whatprovides"
        install_pkg="sudo dnf install -y"
        deps=(libev-devel libffi-devel libvirt-devel $PYTHON-devel pipx)
        ;;
    "openSUSE project"|"SUSE LINUX"|"openSUSE"|"openSUSELeap"|"openSUSETumbleweed")
        deps=(python python-devel libev-devel libffi-devel libvirt-devel python-pipx)
        has_pkg="rpm --whatprovides"
        install_pkg="sudo zypper install"
        ;;
    esac
    ;;

Darwin)
    deps="python libvirt libev libffi pipx uv"
    has_pkg="brew list"
    install_pkg="brew install"
    ;;
esac
for package in ${deps[@]}; do
    if ! $has_pkg $package &>/dev/null; then
        # add a space after old values
        missing="${missing:+$missing }$package"
        echo missing=${missing}
    fi
done
if [ -n "$missing" ]; then
    echo "$0: missing required packages:" 1>&2
    echo "$missing"
    if [ "$install" = true ]; then
        echo "Installing missing packages..."
        $install_pkg $missing
    else
        echo "Please install missing packages or run './bootstrap install'"
        echo "$install_pkg $missing"
        exit 1
    fi
fi

# Attempt to force a UTF-8 locale without being specific to English
export LANG=${LANG:-C.UTF-8}
(echo $LANG | grep -qi utf-8) || export LC_ALL=$LANG.UTF-8

[ -z "$NO_CLOBBER" ] && rm -rf virtualenv
if ! UV=$(command -v uv); then
    pipx install uv
fi
command -v uv > /dev/null || pipx ensurepath
PATH=$PATH:$HOME/.local/bin
uv sync --frozen --all-extras

# Install ansible collections
uv run ansible-galaxy install -r requirements.yml
