import docopt

import teuthology.suite

doc = """
usage: teuthology-suite [-h]
       teuthology-suite --suite <suite> [options]
       teuthology-suite  -s <suite> [options] [<config_yaml>...]

Run a suite of ceph integration tests. A suite is a directory containing
facets. A facet is a directory containing config snippets. Running a suite
means running teuthology for every configuration combination generated by
taking one config snippet from each facet. Any config files passed on the
command line will be used for every combination, and will override anything in
the suite.

Miscellaneous arguments:
  -h, --help                  Show this help message and exit
  -v, --verbose               Be more verbose
  --dry-run                   Do a dry run; do not schedule anything

Standard arguments:
  <config_yaml>               Optional extra job yaml to include
  --base <base>               Base directory for the suite
                              e.g. ~/src/ceph-qa-suite/suites
  -s <suite>, --suite <suite>
                              The suite to schedule
  -c <ceph>, --ceph <ceph>    The ceph branch to run against
                              [default: master]
  -k <kernel>, --kernel <kernel>
                              The kernel branch to run against
                              [default: testing]
  -f <flavor>, --flavor <flavor>
                              The kernel flavor to run against: ('basic',
                              'gcov', 'notcmalloc')
                              [default: basic]
  -t <branch>, --teuthology-branch <branch>
                              The teuthology branch to run against
                              [default: master]
  -m <type>, --machine-type <type>
                              Machine type [default: plana]
  -d <distro>, --distro <distro>
                              Distribution to run against
                              [default: ubuntu]

Scheduler arguments:
  --owner <owner>             Job owner
  -e <email>, --email <email>
                              When tests finish or time out, send an email here
  -N <num>, --num <num>       Number of times to run/queue the job
                              [default: 1]
  -l <jobs>, --limit <jobs>   Queue at most this many jobs
                              [default: 0]
  -p <priority>, --priority <priority>
                              Job priority (lower is sooner)
                              [default: 1000]
  --timeout <timeout>         How long, in seconds, to wait for jobs to finish
                              before sending email. This does not kill jobs.
                              [default: 21600]

"""


def main():
    args = docopt.docopt(doc)
    teuthology.suite.main(args)
